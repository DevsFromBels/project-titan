// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  Admin
  Standart
  EnterpriseUser
  User
}

model Avatars {
  id     String @id @default(uuid())
  url    String
  user   User   @relation(fields: [userId], references: [id])
  userId String @unique
}

model Profile {
  userId         String  @id @unique
  user           User    @relation(fields: [userId], references: [id])
  info           String? @default("")
  isPublic       Boolean @default(true)
  address        String? @default("")
  referred_users Int     @default(0)
}

model User {
  id                String              @id
  name              String              @unique
  email             String              @unique
  password          String
  avatar            Avatars?
  profile           Profile?
  profileId         String?             @unique
  role              Role                @default(User)
  createdAt         DateTime
  notifications     Notification[]
  userSubscriptions UserSubscriptions[]
}

model Market {
  content_id        String              @id @default(uuid())
  content           String
  name              String
  link              String
  user_id           String
  price_for_show    Float
  total_shows       Int
  current_shows     Int
  category          String?
  userSubscriptions UserSubscriptions[]
}

model Notification {
  id        String    @id @default(uuid())
  userId    String
  title     String
  body      String
  link      String?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  user      User      @relation(fields: [userId], references: [id])
  sentAt    DateTime?
}

model UserSubscriptions {
  id       String @id @default(uuid())
  userId   String
  user     User   @relation(fields: [userId], references: [id])
  marketId String
  market   Market @relation(fields: [marketId], references: [content_id])
  
  @@unique([userId, marketId])
}
